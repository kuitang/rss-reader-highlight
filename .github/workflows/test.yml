name: RSS Reader Test Suite

on:
  push:
    branches: [ main, feat/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium

    - name: Run all tests with parallel runner
      run: |
        chmod +x ./run_all_tests.sh
        ./run_all_tests.sh
      env:
        CI: true

    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          screenshots/
          test-results/
          *.log
          *.db
        retention-days: 7

  docker-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t rss-reader-test .

    - name: Run Docker smoke test
      run: |
        docker run --rm -d -p 8081:8080 --name rss-reader-test rss-reader-test
        sleep 10
        
        # Test that the server starts and responds
        if curl -f http://localhost:8081; then
          echo "✅ Docker container serving successfully"
        else
          echo "❌ Docker container failed to serve"
          exit 1
        fi
        
        docker stop rss-reader-test

    - name: Run core tests in Docker
      run: |
        docker run --rm rss-reader-test bash -c "python -m pytest tests/core/test_direct_functions.py tests/core/test_essential_mocks.py -v --tb=short"

