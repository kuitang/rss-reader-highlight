name: RSS Reader Test Suite

on:
  push:
    branches: [ main, feat/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium

    - name: Run core tests (no browser needed)
      run: |
        python -m pytest tests/core/ -v --tb=short -x --disable-warnings
      env:
        TEST_DB: ':memory:'

    - name: Run specialized tests (network required)
      run: |
        python -m pytest tests/specialized/ -v --tb=short --disable-warnings
      continue-on-error: true  # Network tests may be flaky
      env:
        TEST_DB: ':memory:'

    - name: Start application for UI tests
      run: |
        MINIMAL_MODE=true python app.py &
        sleep 5
      env:
        PORT: 8080
        DATABASE_PATH: ./test_ui.db

    - name: Wait for server to be ready
      run: |
        for i in {1..30}; do
          if curl -s http://localhost:8080 > /dev/null; then
            echo "✅ Server ready on port 8080"
            break
          fi
          echo "Waiting for server... ($i/30)"
          sleep 2
        done

    - name: Run UI tests
      run: |
        python -m pytest tests/ui/ -v --tb=short --disable-warnings
      env:
        PYTEST_CURRENT_TEST: ''

    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts-${{ matrix.python-version }}
        path: |
          screenshots/
          test-results/
          *.log
          *.db
        retention-days: 7

  docker-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t rss-reader-test .

    - name: Run Docker smoke test
      run: |
        docker run --rm -d -p 8081:8080 --name rss-reader-test rss-reader-test
        sleep 10
        
        # Test that the server starts and responds
        if curl -f http://localhost:8081; then
          echo "✅ Docker container serving successfully"
        else
          echo "❌ Docker container failed to serve"
          exit 1
        fi
        
        docker stop rss-reader-test

    - name: Run core tests in Docker
      run: |
        docker run --rm rss-reader-test bash -c "python -m pytest tests/core/test_direct_functions.py tests/core/test_essential_mocks.py -v --tb=short"

  parallel-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium

    - name: Run parallel test suite
      run: |
        chmod +x ./run_all_tests.sh
        ./run_all_tests.sh
      env:
        CI: true